version: "3.7"

services:
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    restart: always
    container_name: redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "re  dis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    networks:
      - proxynet

  mongo:
    build:
      context: .
      dockerfile: Dockerfile.mongo
    restart: always
    container_name: mongo
    volumes:
      - mongo-data:/data/dbclear
      - mongo-config:/data/configdb
    ports:
      - 27017-27019:27017-27019 #Set range of ports list to ports sections for mongo db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 10s
      timeout: 60s
      retries: 3
      start_period: 20s
    env_file:
      - ./config/.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ADMIN_PASSWORD}
    networks:
      - proxynet

  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    restart: always
    container_name: rabbitmq
    volumes:
      - rabbitmq-log:/var/log/rabbitmq
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - proxynet

volumes:
  redis-data:
  mongo-data:
  mongo-config:
  rabbitmq-log:
  rabbitmq-data:

networks:
  proxynet:
    name: custom_network
